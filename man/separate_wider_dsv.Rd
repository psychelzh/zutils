% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/separate_wider_dsv.R
\name{separate_wider_dsv}
\alias{separate_wider_dsv}
\title{Separate a column into multiple columns}
\usage{
separate_wider_dsv(
  data,
  col,
  names,
  ...,
  patterns = NULL,
  delim = "_",
  prefix = NULL,
  suffix = NULL
)
}
\arguments{
\item{data}{A data frame.}

\item{col}{<\code{\link[=tidyr_tidy_select]{tidy-select}}> Column to separate.}

\item{names}{Names of the new columns. Use \code{NA} if you want a component not
to be in the output.}

\item{...}{Additional arguments passed to \code{\link[tidyr:separate_wider_delim]{tidyr::separate_wider_regex()}}.}

\item{patterns}{Regular expressions to extract the values from the column. If
\code{NULL}, the pattern will match any character non-greedily. The length of
the vector must be equal to the number of new columns.}

\item{delim}{Delimiter used in the column to separate different pieces of
values.}

\item{prefix, suffix}{Prefix and suffix to be removed from the target column
to retrieve the values.}
}
\value{
A data frame with the separated columns.
}
\description{
This is a wrapper around \code{\link[tidyr:separate_wider_delim]{tidyr::separate_wider_regex()}} that allows to split
a column into multiple columns. The column contains so-called delimiter
separated values (DSV) and the values are extracted using regular
expressions.
}
